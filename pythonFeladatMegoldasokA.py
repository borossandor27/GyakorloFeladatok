"""
Adatbevitel

"""
import os, math

os.system("cls")


def f01():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l k√©t eg√©sz sz√°mot, majd kisz√°molja a k√©t sz√°m √∂sszeg√©t, k√ºl√∂nbs√©g√©t.

    egeszSzam01 = int(input("K√©rem adjon meg egy eg√©sz sz√°mot: "))
    egeszSzam02 = int(input("K√©rem adjon meg egy m√°sik eg√©sz sz√°mot: "))
    print(f"\nA {egeszSzam01} √©s {egeszSzam02} √∂sszege: {egeszSzam01 + egeszSzam02}")
    print(
        f"\nA {egeszSzam01} √©s {egeszSzam02} k√ºl√∂nbs√©ge: {(egeszSzam01 - egeszSzam02)}"
    )


def f02():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l k√©t eg√©sz sz√°mot, majd kisz√°molja a k√©t sz√°m szorzat√°t √©s h√°nyados√°t 2 tizedes pontoss√°ggal.

    egeszSzam01 = int(input("K√©rem adjon meg egy eg√©sz sz√°mot: "))
    egeszSzam02 = int(input("K√©rem adjon meg egy m√°sik eg√©sz sz√°mot: "))
    print(f"\nA {egeszSzam01} √©s {egeszSzam02} √∂sszege: {egeszSzam01 * egeszSzam02}")
    print(
        f"\nA {egeszSzam01} √©s {egeszSzam02} h√°nyadosa: {(egeszSzam01 / egeszSzam02):.2f}"
    )


def f03():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l egy pozit√≠v eg√©sz sz√°mot, majd adjuk meg a kett≈ëvel √©s a h√°rommal vett oszt√°si marad√©k√°t.

    egeszSzam01 = int(input("K√©rem adjon meg egy pozit√≠v eg√©sz sz√°mot: "))
    print(f"\nA {egeszSzam01} kett≈ëvel oszt√°s marad√©ka: {egeszSzam01 % 2}")
    print(f"\nA {egeszSzam01} h√°rommal oszt√°s marad√©ka: {egeszSzam01 % 3}")


def f04():
    # K√©rj√ºnk be egy val√≥s sz√°mot a felhaszn√°l√≥t√≥l, majd √≠rjuk ki a k√©perny≈ëre k√©t tizedesjegy pontoss√°ggal.
    # http://programarcadegames.com/index.php?chapter=formatting&lang=hu

    valosSzam01 = float(input("K√©rem adjon meg egy val√≥s sz√°mot: "))
    print(f"\nA {valosSzam01} k√©t tizedesre kerek√≠tve: {valosSzam01:.2f}")
    print(
        f"A {valosSzam01} k√©t tizedesre kerek√≠tve f√ºggv√©nnyel2: {round(valosSzam01,2)}\n"
    )
    a = 2.478
    b = 5.455
    print(f"\n{a} √©s {b} √∂sszege {(a+b):.2f} vagy {(round(a,2)+round(b,2)):.2f} ?\n")


def f05():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l egy p√°ros sz√°mot, majd adjuk meg a fel√©t.

    parosSzam01 = int(input("K√©rem adjon meg egy p√°ros sz√°mot: "))
    print(f"\nA {parosSzam01} fele: {parosSzam01 / 2}")


def f05b():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l egy p√°ros sz√°mot, majd adjuk meg a fel√©t.
    # Ha m√°r ismern√©d a ciklus utas√≠t√°st, akkor ki is lehetne k√©nyszer√≠teni a p√°ros √©rt√©ket

    parosSzam01 = 0
    while True:
        parosSzam01 = int(input("K√©rem adjon meg egy p√°ros sz√°mot: "))
        if parosSzam01 % 2 == 0:
            break
    print(f"\nA {parosSzam01} fele: {parosSzam01 / 2}")


def f06():
    # K√©rj√ºnk be a felhaszn√°l√≥t√≥l egy val√≥s sz√°mot, majd adjuk meg a harmad√°t.

    valosSzam = float(input("K√©rem adjon meg egy val√≥s √©rt√©ket: "))
    print(f"A {valosSzam} sz√°m haramada: {(valosSzam/3):.3f}")


def f07():
    # K√©rj√ºk be a felhaszn√°l√≥t√≥l egy k√∂r alak√∫ medence √°tm√©r≈ëj√©t √©s m√©lys√©g√©t, majd adjuk meg, hogy h√°ny k√∂bm√©ter v√≠z f√©r bele.

    atmero = float(input("K√©rem adja meg a medence √°tm√©r≈ëj√©t m√©terben: "))
    magassag = float(input("K√©rem adja meg a medence magass√°g√°t m√©terben: "))
    terfogat = math.pi * math.pow(atmero / 2, 2) * magassag
    print(
        f"\nA {atmero} m √°tm√©r≈ëj≈± √©s {magassag} m magass√°g√∫ medence t√©rfogta: {(terfogat):.3f} m"
        + "\u00b3"
    )


def f25():
    # Oldja meg az 'ax + b = 0'  alak√∫ els≈ëfok√∫ egyenletet!

    a = float(input("K√©rem adja meg az 'ax + b = 0' egyenlet 'a' √©rt√©k√©t: "))
    b = float(input("K√©rem adja meg az 'ax + b = 0' egyenlet  'b' √©rt√©k√©t: "))
    print(f"\nx √©rt√©ke: {(-b/a):.4f}")


def f08():
    # Deciliterben megadott t√©rfogatot bontsunk hektoliter, liter, deciliter egys√©gekre!

    terfogat = int(input("Adja meg a t√©rfogatot deciliterben: "))
    hekto = int(terfogat / 1000)
    liter = int((terfogat - hekto * 1000) / 10)
    deciliter = terfogat - hekto * 1000 - liter * 10
    print(
        f"\nA {terfogat} dl = {hekto} hektoliter, {liter} liter √©s {deciliter:.0f} dl"
        + "\n"
    )


def f09():
    # mm-ben megadott √©rt√©ket bontsunk m√©terre, decim√©terre, centim√©terre, millim√©terre

    millimeter = int(input("Adja meg az √°tv√°ltand√≥ t√°vols√°got millim√©terben: "))
    km = millimeter // (1000 * 1000)
    meter = (millimeter - km * 1000 * 1000) // 1000
    decimeters = (millimeter - km * 1000 * 1000 - meter * 1000) // 100
    centimeters = (
        millimeter - km * 1000 * 1000 - meter * 1000 - decimeters * 100
    ) // 10
    mm = (
        millimeter
        - km * 1000 * 1000
        - meter * 1000
        - decimeters * 100
        - centimeters * 10
    )
    print(
        f"\nA {millimeter} mm = {km} km, {meter} m, {decimeters} dm, {centimeters} cm √©s {mm:.0f} mm"
        + "\n"
    )


def f10():
    # bek√©ri egy k√∂r sugar√°t √©s ki√≠rja a ker√ºlet√©t √©s a ter√ºlet√©t 4 tizedes pontoss√°ggal.
    sugar = float(input("K√©rem adja meg a k√∂r sugar√°t: "))
    kerulet = 2 * sugar * math.pi
    terulet = sugar * sugar * math.pi
    print(f"\n{sugar} sugar√∫ k√∂r ker√ºlete: {kerulet:.4f}, ter√ºlete: {terulet:.4f}")


def f11():
    # Celsiusban megadott √©rt√©ket (¬∞ùê∂) √°tv√°lt Fahrenheitre 2 tizedes pontoss√°ggal
    celsius = int(input("Adja meg a h≈ëm√©rs√©kletet ¬∞C-ban: "))
    fahreinheit = celsius * 9 / 5 + 32
    print(f"\n{celsius} ¬∞C = {fahreinheit} ¬∞F")


def f18():
    # Bek√©r egy p√©nz√∂sszeget √©s a legkisebb fizet≈ëeszk√∂znek (5 Ft) megfelel≈ëre kerek√≠ti.
    osszeg = int(input("K√©rem az √∂sszeget: "))
    fizetendo = int(osszeg /5+.5) * 5
    print(f"\n{osszeg} Ft √∂sszeg alapj√°n fizetend≈ë {fizetendo} Ft")


def main():
    # f01()
    # f02()
    # f03()
    # f04()
    # f05()
    # f06()
    # f07()
    # f08()
    # f09()
    # f10()
    # f11()
    f18()


main()
